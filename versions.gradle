/**
 * 使各模块能使用相同的依赖项和Maven存储库
 **/
def addRepos(RepositoryHandler handler) {
//    handler.google()
//    handler.jcenter()//'jcenter' is deprecated
    handler.mavenCentral()
    handler.maven {url 'https://jitpack.io'}
    handler.maven { url 'https://maven.aliyun.com/repository/central/' }
    handler.maven { url 'https://maven.aliyun.com/repository/public/' }
    handler.maven { url 'https://maven.aliyun.com/repository/google/' }
    handler.maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
}
ext.addRepos = this.&addRepos
def versions = [:]
versions.appcompat = '1.4.0-alpha01'
versions.constraintlayout = '2.1.0'
versions.cardview = '1.0.0'
versions.recyclerview = '1.2.1'
versions.swiperefreshlayout = '1.2.0-alpha01'
versions.core_ktx = '1.7.0-alpha01'
versions.activity = '1.3.1'
versions.fragment = '1.4.0-alpha01'
versions.viewpager = '1.0.0'
versions.viewpager2 = '1.1.0-beta01'
versions.paging = '3.1.0-alpha03'
versions.hilt = '1.0.0'
versions.lifecycle = '2.4.0-alpha03'
versions.navigation = '2.4.0-alpha01'
versions.room = '2.4.0-alpha01'

versions.atsl_core = '1.4.0'
versions.atsl_junit = '1.1.3'
versions.atsl_runner = '1.4.0'
versions.atsl_rules = '1.4.0'
versions.espresso = '3.4.0'
versions.robolectric = "4.6.1"
versions.junit = '4.13.2'

versions.material = '1.5.0-alpha01'
versions.gson = '2.8.7'
versions.kotlin = '1.5.10'
versions.coroutines = '1.5.1'
versions.retrofit = '2.9.0'
versions.okhttp = '4.8.0'
versions.glide = '4.11.0'
versions.koin = '2.1.5'
versions.dagger = '2.37'
versions.rxjava2 = '2.2.21'
versions.rxandroid2 = '2.1.1'
versions.rxjava3 = '3.0.13'
versions.rxandroid3 = '3.0.0'
/**------***-------***-------**/
versions.material_dialogs = '3.3.0'
versions.immersionbar = '3.0.0'
versions.smartrefresh = '2.0.1'
versions.recycleview_adapter_helper = '3.0.4'
versions.xrecycleview = '1.3.2'
versions.indicator = '1.7.0'
versions.autosize = '1.2.1'
versions.loadsir = '1.3.8'
versions.background_libary = '1.6.5'
versions.rxpermission = '0.12'
versions.permission_dispacher = '4.8.0'
versions.util_codex = '1.26.0'
versions.mkkv = '1.0.22'
versions.unpeek_livedata = '7.0.4-beta1'
versions.bugly = 'latest.release'
versions.rxandroid_ble = '1.12.1'
versions.rx2_replaying_share = '2.2.0'
versions.timber = "4.7.1"
versions.work = "2.4.0"
ext.versions = versions //ext是project的简写，这里给他设置额外属性versions

def build_config = [:]
build_config.min_sdk = 21
build_config.compile_sdk = 30
build_config.target_sdk = 30
build_config.build_tools = '30.0.3'
ext.build_config = build_config //给工程设置额外属性build_config

/**------***-------***-------**/
ext.deps = [:]
deps.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"
deps.cardview = "androidx.cardview:cardview:$versions.cardview"
deps.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
deps.recyclerview ="androidx.recyclerview:recyclerview:$versions.recyclerview"
deps.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
deps.viewpager = "androidx.viewpager:viewpager:$versions.viewpager"
deps.viewpager2 = "androidx.viewpager2:viewpager2:$versions.viewpager2"
deps.rxandroid2 = "io.reactivex.rxjava2:rxandroid:$versions.rxandroid2"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
def activity = [:]
activity.activity_ktx = "androidx.activity:activity-ktx:$versions.activity"
deps.activity = activity
def fragment = [:]
fragment.fragment = "androidx.fragment:fragment:${versions.fragment}"
fragment.fragment_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
fragment.testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.fragment = fragment

def android_test_support_library = [:]
android_test_support_library.core = "androidx.test:core:$versions.atsl_core"
android_test_support_library.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
android_test_support_library.ext_junit_ktx = "androidx.test.ext:junit-ktx:$versions.atsl_junit"
android_test_support_library.runner = "androidx.test:runner:$versions.atsl_runner"
android_test_support_library.rules = "androidx.test:rules:$versions.atsl_rules"
deps.android_test_support_library = android_test_support_library
def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
deps.junit = "junit:junit:$versions.junit"

def coroutines = [:]
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
coroutines.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"
deps.coroutines = coroutines

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def glide = [:]
glide.glide = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib::$versions.kotlin"
kotlin.stdlibJdk7 = "org.jetbrains.kotlin:kotlin-stdlib-jdk7::$versions.kotlin"
kotlin.stdlibJdk8 = "org.jetbrains.kotlin:kotlin-stdlib-jdk8::$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.process ="androidx.lifecycle:lifecycle-process:$versions.lifecycle"

lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.testing = "androidx.navigation:navigation-testing:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
navigation.dynamic ="androidx.navigation:navigation-dynamic-features-fragment:2.3.0-alpha01"
deps.navigation = navigation

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.ktx = "androidx.room:room-ktx:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

deps.material ="com.google.android.material:material:$versions.material"
deps.gson="com.google.code.gson:gson:$versions.gson"

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.converter_gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.adapter_rxjava2="com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

def okhttp = [:]
okhttp.okhttp="com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.url_connection ="com.squareup.okhttp3:okhttp-urlconnection:$versions.okhttp"
okhttp.log_interceptor ="com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
deps.okhttp = okhttp

def material_dialogs = [:]
material_dialogs.core ="com.afollestad.material-dialogs:core:$versions.material_dialogs"
material_dialogs.input ="com.afollestad.material-dialogs:input:$versions.material_dialogs"
material_dialogs.color ="com.afollestad.material-dialogs:color:$versions.material_dialogs"
material_dialogs.files ="com.afollestad.material-dialogs:files:$versions.material_dialogs"
material_dialogs.datetime ="com.afollestad.material-dialogs:datetime:$versions.material_dialogs"
material_dialogs.bottomsheets ="com.afollestad.material-dialogs:bottomsheets:$versions.material_dialogs"
material_dialogs.lifecycle ="com.afollestad.material-dialogs:lifecycle:$versions.material_dialogs"
deps.material_dialogs = material_dialogs

deps.unpeek_livedata ="com.kunminx.arch:unpeek-livedata:$versions.unpeek_livedata"
deps.loadsir ="com.kingja.loadsir:loadsir:$versions.loadsir"
deps.immersionbar="com.gyf.immersionbar:immersionbar:$versions.immersionbar"
deps.immersionbar_ktx ="com.gyf.immersionbar:immersionbar-ktx:$versions.immersionbar"
deps.background_libary ="com.noober.background:core:$versions.background_libary"

/**------***-------***-------**/
ext.deps = deps

